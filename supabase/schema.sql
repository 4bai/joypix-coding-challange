
--drop function public.handle_new_user CASCADE;
--drop  trigger "on_auth_user_created" on "auth.users" CASCADE;
--drop  table users CASCADE;
--drop  table discussions CASCADE;

create table users (
  -- UUID from auth.users
  id uuid references auth.users not null primary key,
  username text,
  first_name text,
  last_name text
);

-- inserts a row into public.profiles
create function public.handle_new_user()
returns trigger
language plpgsql
security definer set search_path = ''
as $$
begin
  insert into public.users (id, first_name, last_name, username)
  values (new.id, new.raw_user_meta_data ->> 'first_name', new.raw_user_meta_data ->> 'last_name', new.raw_user_meta_data ->> 'username');
  return new;
end;
$$;

-- trigger the function every time a user is created
create trigger on_auth_user_created
  after insert on auth.users
  for each row execute procedure public.handle_new_user();


create table
  public.discussions (
    id bigint generated by default as identity not null,
    created_at timestamp with time zone not null default now(),
    title text null,
    content text null,
    "user" uuid null,
    constraint discussions_pkey primary key (id),
    constraint discussions_user_fkey foreign key ("user") references users (id)
  ) tablespace pg_default;